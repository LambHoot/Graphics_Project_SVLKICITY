#version 330 core

//from vertex shader
in vec3 world_pos;
in vec3 world_normal;
in vec4 viewSpace;

in vec3 frag_Color;
out vec3 color;

const vec3 fogColor = vec3(0.2, 0.6,1.0);
const float FogDensity = 0.005;

void main(){
	vec3 finalColor = vec3(0, 0, 0);

	vec3 lightColor = frag_Color;

	//distance
	float dist = 0;
	float fogFactor = 0;
	//range based
	dist = length(viewSpace);


	fogFactor = 1.0 /exp( (dist * FogDensity)* (dist * FogDensity));
   	fogFactor = clamp( fogFactor, 0.0, 1.0 );
 
	//if you inverse color in glsl mix function you have to
	//put 1.0 - fogFactor
	finalColor = mix(fogColor, frag_Color, fogFactor);

	color = finalColor;
}